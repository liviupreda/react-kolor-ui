{"version":3,"sources":["ColorBox.js","Navbar.js","Palette.js","seedPalettes.js","colorHelpers.js","App.js","serviceWorker.js","index.js"],"names":["ColorBox","props","state","copied","changeCopyState","bind","this","setState","setTimeout","name","background","text","onCopy","style","className","Component","Navbar","colorFormat","handleChange","e","target","value","level","changeLevel","href","defaultValue","min","max","step","onAfterChange","Select","onChange","MenuItem","Palette","changeColorFormat","val","colors","palette","colorBoxes","map","color","key","paletteName","id","emoji","levels","generatePalette","starterPalette","newPalette","hexColor","numberOfColors","scale","chroma","darken","generateRange","mode","reverse","i","push","toLowerCase","replace","hex","rgb","css","rgba","App","seedPalettes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cabc00ce.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nimport \"./ColorBox.css\";\n\nclass ColorBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false\n    };\n    this.changeCopyState = this.changeCopyState.bind(this);\n  }\n\n  changeCopyState() {\n    this.setState({ copied: true }, () => {\n      setTimeout(() => this.setState({ copied: false }), 1500);\n    });\n  }\n\n  render() {\n    const { name, background } = this.props;\n    const { copied } = this.state;\n    return (\n      <CopyToClipboard text={background} onCopy={this.changeCopyState}>\n        <div style={{ background }} className=\"ColorBox\">\n          <div\n            style={{ background }}\n            // Add show class to display overlay if copied is true\n            className={`copy-overlay ${copied && \"show\"}`}\n          />\n          <div className={`copy-msg ${copied && \"show\"}`}>\n            <h1>Copied!</h1>\n            <p>{background}</p>\n          </div>\n          <div className=\"copy-container\">\n            <div className=\"box-content\">\n              <span>{name}</span>\n            </div>\n            <button className=\"copy-button\">Copy</button>\n          </div>\n          <span className=\"btn-more\">More</span>\n        </div>\n      </CopyToClipboard>\n    );\n  }\n}\n\nexport default ColorBox;\n","import React, { Component } from \"react\";\nimport Slider from \"rc-slider\";\nimport Select from \"@material-ui/core/Select\";\nimport \"rc-slider/assets/index.css\";\nimport \"./Navbar.css\";\nimport { MenuItem } from \"@material-ui/core\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { colorFormat: \"hex\" };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ colorFormat: e.target.value });\n    this.props.handleChange(e.target.value);\n  }\n\n  render() {\n    const { level, changeLevel } = this.props;\n    const { colorFormat } = this.state;\n    return (\n      <header className=\"Navbar\">\n        <div className=\"Navbar-logo\">\n          <a href=\"/\">kolor-ui</a>\n        </div>\n        <div className=\"Navbar-slider-container\">\n          <span>Level: {level}</span>\n          <div className=\"Navbar-slider\">\n            <Slider\n              defaultValue={level}\n              min={100}\n              max={900}\n              step={100}\n              onAfterChange={changeLevel}\n            />\n          </div>\n        </div>\n        <div className=\"Navbar-select-container\">\n          <Select value={colorFormat} onChange={this.handleChange}>\n            <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\n            <MenuItem value=\"rgb\">RGB - rgb(255, 255, 255)</MenuItem>\n            <MenuItem value=\"rgba\">RGBA - rgba(255, 255, 255, 1.0)</MenuItem>\n          </Select>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport ColorBox from \"./ColorBox\";\nimport Navbar from \"./Navbar\";\nimport \"./Palette.css\";\n\nclass Palette extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { level: 500, colorFormat: \"hex\" };\n    this.changeLevel = this.changeLevel.bind(this);\n    this.changeColorFormat = this.changeColorFormat.bind(this);\n  }\n\n  changeLevel(level) {\n    this.setState({ level });\n  }\n\n  changeColorFormat(val) {\n    this.setState({ colorFormat: val });\n  }\n\n  render() {\n    const { colors } = this.props.palette;\n    const { level, colorFormat } = this.state;\n    const colorBoxes = colors[level].map(color => (\n      <ColorBox\n        background={color[colorFormat]}\n        name={color.name}\n        key={color.name}\n      />\n    ));\n    return (\n      <div className=\"Palette\">\n        <Navbar\n          level={level}\n          changeLevel={this.changeLevel}\n          handleChange={this.changeColorFormat}\n        />\n        {/* Navbar goes here */}\n        <div className=\"Palette-colors\">{colorBoxes}</div>\n        {/* Footer goes here*/}\n      </div>\n    );\n  }\n}\n\nexport default Palette;\n","export default [\n  {\n    paletteName: \"Material UI Colors\",\n    id: \"material-ui-colors\",\n    emoji: \"🎨\",\n    colors: [\n      { name: \"red\", color: \"#F44336\" },\n      { name: \"pink\", color: \"#E91E63\" },\n      { name: \"purple\", color: \"#9C27B0\" },\n      { name: \"deeppurple\", color: \"#673AB7\" },\n      { name: \"indigo\", color: \"#3F51B5\" },\n      { name: \"blue\", color: \"#2196F3\" },\n      { name: \"lightblue\", color: \"#03A9F4\" },\n      { name: \"cyan\", color: \"#00BCD4\" },\n      { name: \"teal\", color: \"#009688\" },\n      { name: \"green\", color: \"#4CAF50\" },\n      { name: \"lightgreen\", color: \"#8BC34A\" },\n      { name: \"lime\", color: \"#CDDC39\" },\n      { name: \"yellow\", color: \"#FFEB3B\" },\n      { name: \"amber\", color: \"#FFC107\" },\n      { name: \"orange\", color: \"#FF9800\" },\n      { name: \"deeporange\", color: \"#FF5722\" },\n      { name: \"brown\", color: \"#795548\" },\n      { name: \"grey\", color: \"#9E9E9E\" },\n      { name: \"bluegrey\", color: \"#607D8B\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors v1\",\n    id: \"flat-ui-colors-v1\",\n    emoji: \"🤙\",\n    colors: [\n      { name: \"Turquoise\", color: \"#1abc9c\" },\n      { name: \"Emerald\", color: \"#2ecc71\" },\n      { name: \"PeterRiver\", color: \"#3498db\" },\n      { name: \"Amethyst\", color: \"#9b59b6\" },\n      { name: \"WetAsphalt\", color: \"#34495e\" },\n      { name: \"GreenSea\", color: \"#16a085\" },\n      { name: \"Nephritis\", color: \"#27ae60\" },\n      { name: \"BelizeHole\", color: \"#2980b9\" },\n      { name: \"Wisteria\", color: \"#8e44ad\" },\n      { name: \"MidnightBlue\", color: \"#2c3e50\" },\n      { name: \"SunFlower\", color: \"#f1c40f\" },\n      { name: \"Carrot\", color: \"#e67e22\" },\n      { name: \"Alizarin\", color: \"#e74c3c\" },\n      { name: \"Clouds\", color: \"#ecf0f1\" },\n      { name: \"Concrete\", color: \"#95a5a6\" },\n      { name: \"Orange\", color: \"#f39c12\" },\n      { name: \"Pumpkin\", color: \"#d35400\" },\n      { name: \"Pomegranate\", color: \"#c0392b\" },\n      { name: \"Silver\", color: \"#bdc3c7\" },\n      { name: \"Asbestos\", color: \"#7f8c8d\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Dutch\",\n    id: \"flat-ui-colors-dutch\",\n    emoji: \"🇳🇱\",\n    colors: [\n      { name: \"Sunflower\", color: \"#FFC312\" },\n      { name: \"Energos\", color: \"#C4E538\" },\n      { name: \"BlueMartina\", color: \"#12CBC4\" },\n      { name: \"LavenderRose\", color: \"#FDA7DF\" },\n      { name: \"BaraRose\", color: \"#ED4C67\" },\n      { name: \"RadiantYellow\", color: \"#F79F1F\" },\n      { name: \"AndroidGreen\", color: \"#A3CB38\" },\n      { name: \"MediterraneanSea\", color: \"#1289A7\" },\n      { name: \"LavenderTea\", color: \"#D980FA\" },\n      { name: \"VerryBerry\", color: \"#B53471\" },\n      { name: \"PuffinsBill\", color: \"#EE5A24\" },\n      { name: \"PixelatedGrass\", color: \"#009432\" },\n      { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n      { name: \"ForgottenPurple\", color: \"#9980FA\" },\n      { name: \"HollyHock\", color: \"#833471\" },\n      { name: \"RedPigment\", color: \"#EA2027\" },\n      { name: \"TurkishAqua\", color: \"#006266\" },\n      { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n      { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n      { name: \"MagentaPurple\", color: \"#6F1E51\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors American\",\n    id: \"flat-ui-colors-american\",\n    emoji: \"🇺🇸\",\n    colors: [\n      { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n      { name: \"FadedPoster\", color: \"#81ecec\" },\n      { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n      { name: \"ShyMoment\", color: \"#a29bfe\" },\n      { name: \"CityLights\", color: \"#dfe6e9\" },\n      { name: \"MintLeaf\", color: \"#00b894\" },\n      { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n      { name: \"ElectronBlue\", color: \"#0984e3\" },\n      { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n      { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n      { name: \"SourLemon\", color: \"#ffeaa7\" },\n      { name: \"FirstDate\", color: \"#fab1a0\" },\n      { name: \"PinkGlamour\", color: \"#ff7675\" },\n      { name: \"Pico8Pink\", color: \"#fd79a8\" },\n      { name: \"AmericanRiver\", color: \"#636e72\" },\n      { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n      { name: \"OrangeVille\", color: \"#e17055\" },\n      { name: \"Chi-Gong\", color: \"#d63031\" },\n      { name: \"PrunusAvium\", color: \"#e84393\" },\n      { name: \"DraculaOrchid\", color: \"#2d3436\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Aussie\",\n    id: \"flat-ui-colors-aussie\",\n    emoji: \"🇦🇺\",\n    colors: [\n      { name: \"Beekeeper\", color: \"#f6e58d\" },\n      { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n      { name: \"PinkGlamour\", color: \"#ff7979\" },\n      { name: \"JuneBud\", color: \"#badc58\" },\n      { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n      { name: \"Turbo\", color: \"#f9ca24\" },\n      { name: \"QuinceJelly\", color: \"#f0932b\" },\n      { name: \"CarminePink\", color: \"#eb4d4b\" },\n      { name: \"PureApple\", color: \"#6ab04c\" },\n      { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n      { name: \"MiddleBlue\", color: \"#7ed6df\" },\n      { name: \"Heliotrope\", color: \"#e056fd\" },\n      { name: \"ExodusFruit\", color: \"#686de0\" },\n      { name: \"DeepKoamaru\", color: \"#30336b\" },\n      { name: \"SoaringEagle\", color: \"#95afc0\" },\n      { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n      { name: \"SteelPink\", color: \"#be2edd\" },\n      { name: \"Blurple\", color: \"#4834d4\" },\n      { name: \"DeepCove\", color: \"#130f40\" },\n      { name: \"WizardGrey\", color: \"#535c68\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors British\",\n    id: \"flat-ui-colors-british\",\n    emoji: \"🇬🇧\",\n    colors: [\n      { name: \"ProtossPylon\", color: \"#00a8ff\" },\n      { name: \"Periwinkle\", color: \"#9c88ff\" },\n      { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n      { name: \"DownloadProgress\", color: \"#4cd137\" },\n      { name: \"Seabrook\", color: \"#487eb0\" },\n      { name: \"VanaDylBlue\", color: \"#0097e6\" },\n      { name: \"MattPurple\", color: \"#8c7ae6\" },\n      { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n      { name: \"SkirretGreen\", color: \"#44bd32\" },\n      { name: \"Naval\", color: \"#40739e\" },\n      { name: \"NasturcianFlower\", color: \"#e84118\" },\n      { name: \"LynxWhite\", color: \"#f5f6fa\" },\n      { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n      { name: \"MazarineBlue\", color: \"#273c75\" },\n      { name: \"BlueNights\", color: \"#353b48\" },\n      { name: \"HarleyOrange\", color: \"#c23616\" },\n      { name: \"HintOfPensive\", color: \"#dcdde1\" },\n      { name: \"ChainGangGrey\", color: \"#718093\" },\n      { name: \"PicoVoid\", color: \"#192a56\" },\n      { name: \"ElectroMagnetic\", color: \"#2f3640\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Spanish\",\n    id: \"flat-ui-colors-spanish\",\n    emoji: \"🇪🇸\",\n    colors: [\n      { name: \"JacksonsPurple\", color: \"#40407a\" },\n      { name: \"C64Purple\", color: \"#706fd3\" },\n      { name: \"SwanWhite\", color: \"#f7f1e3\" },\n      { name: \"SummerSky\", color: \"#34ace0\" },\n      { name: \"CelestialGreen\", color: \"#33d9b2\" },\n      { name: \"LuckyPoint\", color: \"#2c2c54\" },\n      { name: \"Liberty\", color: \"#474787\" },\n      { name: \"HotStone\", color: \"#aaa69d\" },\n      { name: \"DevilBlue\", color: \"#227093\" },\n      { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n      { name: \"FlourescentRed\", color: \"#ff5252\" },\n      { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n      { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n      { name: \"MandarinSorbet\", color: \"#ffb142\" },\n      { name: \"SpicedButterNut\", color: \"#ffda79\" },\n      { name: \"EyeOfNewt\", color: \"#b33939\" },\n      { name: \"ChileanFire\", color: \"#cd6133\" },\n      { name: \"GreyPorcelain\", color: \"#84817a\" },\n      { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n      { name: \"Desert\", color: \"#ccae62\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Indian\",\n    id: \"flat-ui-colors-indian\",\n    emoji: \"🇮🇳\",\n    colors: [\n      { name: \"OrchidOrange\", color: \"#FEA47F\" },\n      { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n      { name: \"HoneyGlow\", color: \"#EAB543\" },\n      { name: \"SweetGarden\", color: \"#55E6C1\" },\n      { name: \"FallingStar\", color: \"#CAD3C8\" },\n      { name: \"RichGardenia\", color: \"#F97F51\" },\n      { name: \"ClearChill\", color: \"#1B9CFC\" },\n      { name: \"WhitePepper\", color: \"#F8EFBA\" },\n      { name: \"Keppel\", color: \"#58B19F\" },\n      { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n      { name: \"FieryFuchsia\", color: \"#B33771\" },\n      { name: \"BlueBell\", color: \"#3B3B98\" },\n      { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n      { name: \"OasisStream\", color: \"#9AECDB\" },\n      { name: \"BrightUbe\", color: \"#D6A2E8\" },\n      { name: \"MagentaPurple\", color: \"#6D214F\" },\n      { name: \"EndingNavyBlue\", color: \"#182C61\" },\n      { name: \"SasquatchSocks\", color: \"#FC427B\" },\n      { name: \"PineGlade\", color: \"#BDC581\" },\n      { name: \"HighlighterLavender\", color: \"#82589F\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors French\",\n    id: \"flat-ui-colors-french\",\n    emoji: \"🇫🇷\",\n    colors: [\n      { name: \"FlatFlesh\", color: \"#fad390\" },\n      { name: \"MelonMelody\", color: \"#f8c291\" },\n      { name: \"Livid\", color: \"#6a89cc\" },\n      { name: \"Spray\", color: \"#82ccdd\" },\n      { name: \"ParadiseGreen\", color: \"#b8e994\" },\n      { name: \"SquashBlossom\", color: \"#f6b93b\" },\n      { name: \"MandarinRed\", color: \"#e55039\" },\n      { name: \"AzraqBlue\", color: \"#4a69bd\" },\n      { name: \"Dupain\", color: \"#60a3bc\" },\n      { name: \"AuroraGreen\", color: \"#78e08f\" },\n      { name: \"IcelandPoppy\", color: \"#fa983a\" },\n      { name: \"TomatoRed\", color: \"#eb2f06\" },\n      { name: \"YueGuangBlue\", color: \"#1e3799\" },\n      { name: \"GoodSamaritan\", color: \"#3c6382\" },\n      { name: \"Waterfall\", color: \"#38ada9\" },\n      { name: \"CarrotOrange\", color: \"#e58e26\" },\n      { name: \"JalapenoRed\", color: \"#b71540\" },\n      { name: \"DarkSapphire\", color: \"#0c2461\" },\n      { name: \"ForestBlues\", color: \"#0a3d62\" },\n      { name: \"ReefEncounter\", color: \"#079992\" }\n    ]\n  }\n];\n","import chroma from \"chroma-js\";\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nfunction generatePalette(starterPalette) {\n  let newPalette = {\n    paletteName: starterPalette.paletteName,\n    id: starterPalette.id,\n    emoji: starterPalette.emoji,\n    colors: {}\n  };\n  for (let level of levels) {\n    newPalette.colors[level] = [];\n  }\n  for (let color of starterPalette.colors) {\n    let scale = generateScale(color.color, 10).reverse();\n    for (let i in scale) {\n      newPalette.colors[levels[i]].push({\n        name: `${color.name} ${levels[i]}`,\n        // Replace any spaces in color name with a dash; will use in routes\n        id: color.name.toLowerCase().replace(/ /g, \"-\"),\n        hex: scale[i],\n        // Use Chroma to generate RGB color from Hex value\n        rgb: chroma(scale[i]).css(),\n        rgba: chroma(scale[i])\n          .css()\n          .replace(\"rgb\", \"rgba\")\n          .replace(\")\", \",1.0)\")\n      });\n    }\n  }\n  return newPalette;\n}\n\nfunction generateRange(hexColor) {\n  // Generate an array of ranges for hexColor shade scale:\n  // [hexColor.darken(1.4), hexColor, #fff]\n  const end = \"#fff\";\n  return [chroma(hexColor).darken(1.4), hexColor, end];\n}\n\nfunction generateScale(hexColor, numberOfColors) {\n  // Generate scale from the range generated in generateRange()\n  // Spits out a number of *numberofColors* colors\n  return chroma\n    .scale(generateRange(hexColor))\n    .mode(\"lab\")\n    .colors(numberOfColors);\n}\n\nexport { generatePalette };\n","import React from \"react\";\nimport Palette from \"./Palette\";\nimport seedPalettes from \"./seedPalettes\";\nimport { generatePalette } from \"./colorHelpers\";\n\nfunction App() {\n  return (\n    <div>\n      <Palette palette={generatePalette(seedPalettes[6])} />;\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}